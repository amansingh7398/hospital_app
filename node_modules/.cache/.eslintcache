[{"D:\\New folder\\hospital_app\\src\\index.js":"1","D:\\New folder\\hospital_app\\src\\App.js":"2","D:\\New folder\\hospital_app\\src\\reportWebVitals.js":"3","D:\\New folder\\hospital_app\\src\\components\\Header.js":"4","D:\\New folder\\hospital_app\\src\\components\\PatientList.js":"5","D:\\New folder\\hospital_app\\src\\components\\Data.js":"6"},{"size":624,"mtime":1682024870000,"results":"7","hashOfConfig":"8"},{"size":373,"mtime":1682024870000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1682024870000,"results":"10","hashOfConfig":"8"},{"size":1271,"mtime":1682024870000,"results":"11","hashOfConfig":"8"},{"size":10681,"mtime":1682070659472,"results":"12","hashOfConfig":"8"},{"size":3532,"mtime":1682024870000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eloxrt",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\New folder\\hospital_app\\src\\index.js",[],[],"D:\\New folder\\hospital_app\\src\\App.js",[],[],"D:\\New folder\\hospital_app\\src\\reportWebVitals.js",[],[],"D:\\New folder\\hospital_app\\src\\components\\Header.js",["34"],[],"import {Button, Stack} from '@mui/material';\nimport React from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nfunction Header() {\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate('/patients');\n    };\n\n    return (\n        <div>\n            <header className=\"header\">\n                <div className=\"brand-box\">\n                    <span className=\"brand\">Shree Krishna Hospital</span>\n                </div>\n\n                <div className=\"text-box\">\n                    <h1 className=\"heading-primary\">\n                        <span className=\"heading-primary-main\">All Entries and List of Patient</span>\n                    </h1>\n                    <div className=\"text-box1\" >\n                    <Button\n                        variant=\"outlined\"\n                        // onClick={handleClick}\n                    >\n                        Admin Login\n                    </Button>\n                    <Button\n                      \n                        variant=\"outlined\"\n                        onClick={handleClick}\n                    >\n                        See Patients List\n                    </Button>\n</div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Header;\n","D:\\New folder\\hospital_app\\src\\components\\PatientList.js",["35"],[],"import React, {useState, useEffect} from \"react\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport {Button, Stack} from \"@mui/material\";\nimport {patientData} from \"./Data\";\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport \"./Patient.css\"\n// import {patientData} from \"./Header\";\n\nconst PatientList = () => {\n    const [search, setSearch] = useState(\"\");\n    const [filteredData, setFilteredData] = useState(patientData);\n    const [showModal, setShowModal] = useState(false);\n    const [editingPatient, setEditingPatient] = useState(null);\n    const [newPatientData, setNewPatientData] = useState({\n        name: \"\",\n        gender: \"\",\n        dob: \"\",\n        image: \"\"\n    });\n    const [showNewPatientModal, setShowNewPatientModal] = useState(false);\n\n    const [open, setOpen] = useState(false)\n    useEffect(() => {\n        const results = patientData.filter(patient =>\n            patient.name.toLowerCase().includes(search.toLowerCase())\n        );\n        setFilteredData(results);\n    }, [search]);\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            setNewPatientData(prevState => ({\n                ...prevState,\n                image: reader.result\n            }));\n        };\n    };\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    const handleEdit = patient => {\n        setEditingPatient(patient);\n        setNewPatientData(patient);\n        setShowModal(true);\n    };\n\n    const handleSave = () => {\n        if (editingPatient) {\n            // Edit existing patient\n            const updatedData = patientData.map(patient =>\n                patient.id === editingPatient.id ? newPatientData : patient\n            );\n            setFilteredData(updatedData);\n            localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\n        } else {\n            // Add new patient\n            const newPatient = {\n                id: patientData.length + 1,\n                ...newPatientData\n            };\n            const updatedData = [...patientData, newPatient];\n            setFilteredData(updatedData);\n            localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\n        }\n        setShowModal(false);\n        setEditingPatient(null);\n        setNewPatientData({\n            name: \"\",\n            gender: \"\",\n            dob: \"\",\n            image: \"\"\n        });\n    };\n\n    const handleCancel = () => {\n        setShowModal(false);\n        setEditingPatient(null);\n        setNewPatientData({\n            name: \"\",\n            gender: \"\",\n            dob: \"\",\n            image: \"\"\n        });\n    };\n\n    const handleInputChange = event => {\n        const {name, value} = event.target;\n        setNewPatientData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleAddPatient = () => {\n        const newPatient = {\n            id: patientData.length + 1,\n            ...newPatientData\n        };\n        const updatedData = [...patientData, newPatient];\n        setFilteredData(updatedData);\n        localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\n        setShowNewPatientModal(false);\n        setNewPatientData({\n            name: \"\",\n            gender: \"\",\n            dob: \"\",\n            image: \"\"\n        });\n    };\n\n\n    return (\n        <div className=\"patient-list-body\">\n            <Stack direction={\"\"} justifyContent=\"center\" >\n                <p className=\"find-patient-text\">Find your patient here</p>\n            </Stack>\n\n            <div className=\"input-field\" >\n                <Button\n                    variant=\"contained\"\n                    onClick={() => setShowNewPatientModal(true)}\n                >\n                    Add New Patient\n                </Button>\n                <input\n                    className=\"input-txt\"\n                    placeholder=\"Search patient name..\"\n                    type=\"text\"\n                    value={search}\n                    onChange={handleSearch}\n                />\n            </div>\n\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 5,\n                        width: 300,\n                    },\n                }}\n            >\n                {filteredData.map((patient) => (\n\n                    <Paper  >\n                        <div className=\"patient-list\" >\n                            <img className=\"patient-photo\" src={patient.image} alt=\"green iguana\" />\n                        </div>\n                        <Typography color=\"green\" gutterTop variant=\"h5\" marginLeft={\"20px\"}>\n                            {patient.name}\n                        </Typography>\n                        <Stack direction={\"column\"} marginLeft={\"20px\"} spacing={1}>\n                            <span className=\"reason\"><span >Reason for admit : </span>{patient.subject}</span>\n                            <span>{patient.gender}</span>\n                            <span className=\"dob-alignment\">{patient.dob}</span>\n                        </Stack>\n                        <div className=\"edit-btn-section\"  >\n\n                            <Button className=\"edit-btn\" variant=\"contained\" onClick={() => {handleEdit(patient); setOpen(true);}\n                            }>\n                                Edit\n                            </Button>\n                        </div>\n                    </Paper>\n                ))}\n            </Box>\n\n            {showModal && (\n                <div>\n                    <Dialog open={open} onClose={handleClose} >\n                        <DialogTitle>\n                            {editingPatient ? \"Edit Patient\" : \"Add New Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>\n                                Edit your patient details here\n                            </DialogContentText>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={handleImageChange}\n                                style={{marginBottom: \"20px\"}}\n                            />\n\n                            <img\n                                src={newPatientData.image}\n                                alt=\"patient image\"\n                                className=\"new-patient-image\"\n\n                            />\n\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                placeholder=\"Name\"\n                                fullWidth\n                                value={newPatientData.name}\n                                onChange={handleInputChange}\n                                name=\"name\"\n\n                            />\n\n                            <TextField\n                                margin=\"dense\"\n                                id=\"gender\"\n                                placeholder=\"Gender\"\n                                fullWidth\n                                value={newPatientData.gender}\n                                onChange={handleInputChange}\n                                name=\"gender\"\n                            />\n\n                            <TextField\n                                margin=\"dense\"\n                                id=\"dob\"\n                                placeholder=\"Date of Birth\"\n                                fullWidth\n                                value={newPatientData.dob}\n                                onChange={handleInputChange}\n                                name=\"dob\"\n                            />\n                        </DialogContent>\n                        <DialogActions className=\"center-btn\">\n                            <Button className=\"edit-btn-1\" onClick={handleCancel}>Cancel</Button>\n                            <Button className=\"edit-btn-1\" onClick={handleSave}>Save</Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )}\n            {showNewPatientModal && <div>\n                <Dialog open={showNewPatientModal} onClose={() => setShowNewPatientModal(false)} className=\"add-data-dialog\">\n                    <DialogTitle>Add New Patient</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                                placeholder=\"Name\"\n                                value={newPatientData.name}\n                                onChange={handleInputChange}\n                                name=\"name\"\n                            />\n                            <TextField\n                                placeholder=\"Gender\"\n                                value={newPatientData.gender}\n                                onChange={handleInputChange}\n                                name=\"gender\"\n                                className=\"textfield-data\"\n                            />\n                            <TextField\n                                placeholder=\"DOB\"\n                                value={newPatientData.dob}\n                                onChange={handleInputChange}\n                                name=\"dob\"\n                            />\n                            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"upload-image\" />\n                        </form>\n                    </DialogContent>\n                    <DialogActions className=\"center-btn\">\n                        <Button onClick={() => setShowNewPatientModal(false)}\n                            className=\"edit-btn-1\"\n                        >Cancel</Button>\n                        <Button onClick={handleAddPatient} className=\"edit-btn-1\">Save</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>}\n        </div>\n\n    );\n}\n\nexport default PatientList;\n\n\n\n","D:\\New folder\\hospital_app\\src\\components\\Data.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":203,"column":29,"nodeType":"42","endLine":208,"endColumn":31},"no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]